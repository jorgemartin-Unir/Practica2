---
- name: Firewall 6443/tcp 
  ansible.posix.firewalld:
    port: 6443/tcp 
    permanent: yes
    state: enabled
- name: Firewall 2379-2380/tcp
  ansible.posix.firewalld:
    port: 2379-2380/tcp 
    permanent: yes
    state: enabled
- name: Firewall 10250/tcp
  ansible.posix.firewalld:
    port: 10250/tcp 
    permanent: yes
    state: enabled
- name: Firewall 10251/tcp
  ansible.posix.firewalld:
    port: 10251/tcp
    permanent: yes
    state: enabled
- name: Firewall 10252/tcp
  ansible.posix.firewalld:
    port: 10252/tcp 
    permanent: yes
    state: enabled
- name: Firewall 10255/tcp
  ansible.posix.firewalld:
    port: 10255/tcp
    permanent: yes
    state: enabled
- name: Firewall reload
  systemd:
    name: firewalld
    state: reloaded
- name: Instalamos kubeadm
  command: kubeadm config images pull
- name: Acceso a los workers. Firewall 
  ansible.posix.firewalld:
    rich_rule: 'rule family=ipv4 source address={{ item }}/32 accept'
    permanent: yes
    state: enabled
  with_items: "{{ groups['workers'] }}" 
- name: Firewall reload
  systemd:
    name: firewalld
    state: reloaded
- name: Firewall acceso de los contenedores a localhost
  ansible.posix.firewalld:
    rich_rule: 'rule family=ipv4 source address=172.17.0.0/16 accept'
    permanent: yes
    zone: public
    state: enabled
- name: Firewall reload
  systemd:
    name: firewalld
    state: reloaded
- name: Reset Kubernetes
  shell: kubeadm reset --force
  register: reset_cluster
- name: CNI de kubernetes
  shell: kubeadm init --pod-network-cidr 192.169.0.0/16 --ignore-preflight-errors=swap
  register: kubeadm_token 
- name: Create Kubernetes config directory
  file:
    path: "/root/.kube/"
    state: directory
- name: Copy admin.conf to Home directory
  when: kubeadm_token is succeeded
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "/root/.kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true